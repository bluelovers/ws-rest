{
  "name": "ws-rest",
  "version": "1.0.0",
  "private": true,
  "description": "",
  "keywords": [
    "demonovel",
    "node-novel",
    "rest",
    "api",
    "json",
    "novel",
    "dom",
    "jsdom",
    "jquery",
    "cache",
    "http",
    "site",
    "parse",
    "decorator"
  ],
  "homepage": "https://github.com/bluelovers/ws-rest#readme",
  "bugs": {
    "url": "https://github.com/bluelovers/ws-rest/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bluelovers/ws-rest.git"
  },
  "license": "ISC",
  "author": "",
  "workspaces": [
    "packages/@node-novel/*",
    "packages/@bluelovers/*",
    "packages/@demonovel/*",
    "packages/*"
  ],
  "scripts": {
    "review:all": "yarn-tool ws run review --concurrency 1",
    "review:since": "yarn run review:all -- --since",
    "coverage:all": "yarn-tool ws run coverage --concurrency 1",
    "coverage:since": "yarn run coverage:all -- --since",
    "lint:all": "yarn-tool ws run lint --concurrency 1",
    "lint:since": "yarn run lint:all -- --since",
    "pretest": "echo pretest",
    "test": "yarn run test:since",
    "test:all": "yarn-tool ws run test --concurrency 1",
    "test:jest:clearCache": "jest --clearCache",
    "test:since": "yarn run test:all -- --since",
    "test:snapshot:all": "yarn-tool ws run test:snapshot --concurrency 1",
    "test:snapshot:since": "yarn run test:snapshot:all -- --since",
    "test:tsd:all": "yarn-tool ws run test:tsd --concurrency 1",
    "test:tsd:since": "yarn run test:tsd:all -- --since",
    "install:frozenLockfile": "yarn-tool install --frozen-lockfile",
    "install:reset-lockfile": "yarn-tool install --reset-lockfile",
    "install:resetLockfile": "yarn-tool install --reset-lockfile",
    "prebuild:lockfile": "ynpx sync-lockfile",
    "build:all": "yarn-tool ws run build --concurrency 1",
    "build:since": "yarn run build:all -- --since",
    "ci:test": "tsx ./script/ci/test.ts",
    "ci:install": "yarn --frozen-lockfile --ignore-engines && yarn global add lerna@6 typescript ts-node cross-env tsx --ignore-engines",
    "ci:install:task:cache": "yarn add -W regexp-cjk cjk-conv @novel-segment/util @node-novel/sort node-novel-info",
    "ci:build": "yarn run ci:test && yarn run lerna:prepublish:ci",
    "ci:build:1": "lerna run --stream --concurrency 2 --scope @node-novel/cached-dmzj build",
    "ci:build:2": "lerna run --stream --concurrency 2 --scope @node-novel/cached-esjzone build",
    "ci:build:3": "lerna run --stream --concurrency 2 --scope @node-novel/cached-wenku8 build",
    "ci:build:4": "lerna run --stream --concurrency 1 --scope @node-novel/cached-masiro build",
    "ci:build:5": "lerna run --stream --concurrency 1 --scope @node-novel/cached-masiro-me build",
    "ci:build:data-build": "lerna run --stream --concurrency 1 --scope @demonovel/cached-data build",
    "ci:cache:list": "tsx ./script/ci/test/chk-cache",
    "ci:push": "tsx ./script/ci/git-push",
    "ci:task": "tsx ./script/task",
    "ci:task:novel-opds-now": "tsx ./script/task/novel-opds-now.ts",
    "lerna": "yarn run lerna:prepublish && lerna publish --yes --bump patch && yarn run ci:cache:list",
    "lerna:prepublish": "lerna run --stream --scope @node-novel/cached-* --ignore @node-novel/cached-masiro --ignore @node-novel/cached-lhscan build && lerna run --stream  --scope @demonovel/cached-data build",
    "lerna:prepublish:ci": "lerna run --stream --concurrency 2 --scope @node-novel/cached-* build --ignore @node-novel/cached-masiro --ignore @node-novel/cached-lhscan && lerna run --stream --concurrency 1 --scope @demonovel/cached-data build",
    "lerna:publish": "yarn run prepublishOnly:root && lerna publish && yarn run postpublishOnly",
    "lerna:publish:yes": "yarn run prepublishOnly:root && lerna publish --yes --bump patch && yarn run postpublishOnly",
    "lerna:publish:yes:major": "yarn run prepublishOnly:root && lerna publish --no-private --yes --bump major && yarn run postpublishOnly",
    "lerna:publish:yes:minor": "yarn run prepublishOnly:root && lerna publish --no-private --yes --bump minor && yarn run postpublishOnly",
    "lerna:publish:yes:patch": "yarn run prepublishOnly:root && lerna publish --no-private --yes --bump patch && yarn run postpublishOnly",
    "ws:fix-all": "yarn-tool fix-all  --overwriteHostedGitInfo",
    "ws:fix-all:resetStaticFiles": "yarn run ws:fix-all -- --resetStaticFiles",
    "preversion": "yarn run test",
    "version": "echo version",
    "postversion": "yarn-tool fix-all",
    "prepublish": "echo prepublish",
    "prepare": "echo prepare",
    "prepare:fix-ws-links": "ynpx @yarn-tool/fix-ws-links",
    "prepublishOnly": "echo prepublishOnly",
    "prepublishOnly:check-bin": "ynpx --quiet @yarn-tool/check-pkg-bin",
    "prepublishOnly:lockfile": "ynpx --quiet sync-lockfile",
    "prepublishOnly:root": "yarn run prepublishOnly:check-bin && yarn run prepare:fix-ws-links",
    "prepublishOnly:update": "yarn run ncu && yarn run sort-package-json",
    "prepack": "echo prepack",
    "pack": "echo pack",
    "postpack": "echo postpack",
    "publish": "echo publish",
    "postpublish": "echo postpublish",
    "postpublishOnly": "yarn run postpublishOnly:ws-root-changelog & echo postpublishOnly",
    "postpublishOnly:ws-root-changelog": "ynpx ws-root-changelog & git add ./CHANGELOG.md & git commit ./CHANGELOG.md -m \"chore(changelog): update changelog toc in workspaces root\" & echo update changelog toc in workspaces root",
    "ncu": "yarn run ncu:ws",
    "ncu:ws": "yarn-tool ncu -u --AA",
    "ncu:root": "yarn-tool ncu -u",
    "sort-package-json": "yarn run sort-package-json:root && yarn run sort-package-json:ws",
    "sort-package-json:root": "yarn-tool sort",
    "sort-package-json:ws": "yarn-tool ws sort",
    "tsc:showConfig": "ynpx get-current-tsconfig -p"
  },
  "resolutions": {
    "@types/fs-extra": "^11.0.2",
    "@types/tough-cookie": "< 4",
    "axios": "<0.22 >0.21.1"
  },
  "dependencies": {
    "@bluelovers/fast-glob": "^3.0.4",
    "@bluelovers/tsconfig": "^1.0.35",
    "@git-lazy/diff-staged": "^1.0.42",
    "@git-lazy/util": "^1.0.41",
    "@node-novel/sort": "^1.0.23",
    "@novel-segment/util": "^1.0.76",
    "@ts-type/package-dts": "^2.0.8",
    "array-hyper-unique": "^2.1.4",
    "axios": "<0.22 >0.21.1",
    "bluebird": "^3.7.2",
    "cheerio": "^1.0.0-rc.12",
    "cjk-conv": "^1.2.146",
    "cross-fetch": "^4.0.0",
    "dot-values2": "^2.0.7",
    "filesize": "^10.1.0",
    "fs-extra": "^11.2.0",
    "get-value": "^3.0.1",
    "hash-sum": "^2.0.0",
    "lodash": "^4.17.21",
    "moment": "^2.30.1",
    "node-novel-info": "^3.0.18",
    "protobufjs": "^7.2.6",
    "regexp-cjk": "^3.3.113",
    "regexp-cjk-plugin-escape-unicode-property": "^1.0.38",
    "regexp-cjk-plugin-extra": "^1.0.43",
    "regexpp2": "^1.3.34",
    "sort-object-keys2": "^3.0.5",
    "str-util": "^3.0.2",
    "string-natural-compare": "^3.0.1",
    "tough-cookie": "< 4 >= 3",
    "uni-string": "^2.0.7",
    "unset-value": "^2.0.1",
    "upath2": "^3.1.19",
    "uuid": "^9.0.1",
    "zero-width": "^1.0.29"
  },
  "devDependencies": {
    "@bluelovers/tsconfig": "^1.0.35",
    "@node-novel/md-loader": "^1.0.19",
    "@types/bluebird": "^3.5.42",
    "@types/chai": "^4.3.12",
    "@types/cheerio": "^0.22.35",
    "@types/dotenv": "^8.2.0",
    "@types/env-ci": "^3.1.4",
    "@types/fs-extra": "^11.0.4",
    "@types/get-value": "^3.0.5",
    "@types/hash-sum": "^1.0.2",
    "@types/jest": "^29.5.12",
    "@types/jquery": "^3.5.29",
    "@types/jsdom": "^21.1.6",
    "@types/lodash": "^4.14.202",
    "@types/moment": "^2.13.0",
    "@types/node": "^20.11.24",
    "@types/tough-cookie": "< 4",
    "@types/url-parse": "^1.4.11",
    "@types/uuid": "^9.0.8",
    "@yarn-tool/ws-find-up-paths": "1.0.12",
    "bluebird-cancellation": "^1.0.16",
    "chai": "<5 >=4.4.1",
    "cross-ci": "^1.7.0",
    "cross-env": "^7.0.3",
    "dotenv": "^16.4.5",
    "env-ci": "^11.0.0",
    "jest": "^29.7.0",
    "jest-transform-stealthy-require": "^1.0.0",
    "ts-jest": "^29.1.2",
    "ts-type": "^3.0.1",
    "tslib": "^2.6.2",
    "tsx": "^4.7.1"
  }
}

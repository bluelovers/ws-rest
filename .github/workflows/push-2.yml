name: ci:build:2 esjzone

on:
  workflow_dispatch:
  push:
    branches:
      - master
  schedule:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows#scheduled-events-schedule
#            ┌───────────── minute (0 - 59)
#            │ ┌───────────── hour (0 - 23)
#            │ │ ┌───────────── day of the month (1 - 31)
#            │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
#            │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
#            │ │ │ │ │
#            │ │ │ │ │
#            │ │ │ │ │
#            * * * * *
    - cron: '0 2 * * 2'
    - cron: '0 2 * * 6'
jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: node
      - name: get yarn cache dir
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: set cache id
        id: id-cache
        run: echo "::set-output name=id::${GITHUB_SHA}"
      - name: echo var
        run: |
          echo ${{ steps.yarn-cache.outputs.dir }}
          echo ${{ steps.id-cache.outputs.id }}
          echo ${GITHUB_SHA}
      - name: yarn cache
        uses: bluelovers/github-actions-cache@2020011001
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ steps.id-cache.outputs.id }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: cached-dmzj
        uses: bluelovers/github-actions-cache@2020011001
        with:
          path: packages/@node-novel/cached-dmzj/test/temp
          key: ${{ runner.os }}-cached-dmzj-${{ steps.id-cache.outputs.id }}
          restore-keys: |
            ${{ runner.os }}-cached-dmzj-
      - name: cached-esjzone
        uses: bluelovers/github-actions-cache@2020011001
        with:
          path: packages/@node-novel/cached-esjzone/test/temp
          key: ${{ runner.os }}-cached-esjzone-${{ steps.id-cache.outputs.id }}
          restore-keys: |
            ${{ runner.os }}-cached-esjzone-
      - name: cached-masiro
        uses: bluelovers/github-actions-cache@2020011001
        with:
          path: packages/@node-novel/cached-masiro/test/temp
          key: ${{ runner.os }}-cached-masiro-${{ steps.id-cache.outputs.id }}
          restore-keys: |
            ${{ runner.os }}-cached-masiro-
      - name: cached-wenku8
        uses: bluelovers/github-actions-cache@2020011001
        with:
          path: packages/@node-novel/cached-wenku8/test/temp
          key: ${{ runner.os }}-cached-wenku8-${{ steps.id-cache.outputs.id }}
          restore-keys: |
            ${{ runner.os }}-cached-wenku8-
      - name: setup git config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: install deps
        run: |
          yarn run ci:install
          yarn run ci:install:task:cache
      - name: test ci env
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          ACTIONS_CACHE_URL: ${{ secrets.ACTIONS_CACHE_URL }}
          ACTIONS_RUNTIME_URL: ${{ secrets.ACTIONS_RUNTIME_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MASIRO_USER: ${{ secrets.MASIRO_USER }}
          MASIRO_PASS: ${{ secrets.MASIRO_PASS }}
          WENKU8_USER: ${{ secrets.WENKU8_USER }}
          WENKU8_PASS: ${{ secrets.WENKU8_PASS }}
        run: yarn run ci:test
      - name: ci:cache:list
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MASIRO_USER: ${{ secrets.MASIRO_USER }}
          MASIRO_PASS: ${{ secrets.MASIRO_PASS }}
          WENKU8_USER: ${{ secrets.WENKU8_USER }}
          WENKU8_PASS: ${{ secrets.WENKU8_PASS }}
        run: yarn run ci:cache:list
      - name: run script
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MASIRO_USER: ${{ secrets.MASIRO_USER }}
          MASIRO_PASS: ${{ secrets.MASIRO_PASS }}
          WENKU8_USER: ${{ secrets.WENKU8_USER }}
          WENKU8_PASS: ${{ secrets.WENKU8_PASS }}
          NODE_OPTIONS: --max_old_space_size=8192
        run: yarn run ci:build:2
      - name: ci:cache:list
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MASIRO_USER: ${{ secrets.MASIRO_USER }}
          MASIRO_PASS: ${{ secrets.MASIRO_PASS }}
          WENKU8_USER: ${{ secrets.WENKU8_USER }}
          WENKU8_PASS: ${{ secrets.WENKU8_PASS }}
        run: yarn run ci:cache:list
      - name: Merge
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git reset --hard
          git pull origin master -v --progress --rebase --ff
      - name: Push changes
        if: success()
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: echo
        run: |
          echo ${{github.event_name}}
      - name: Discord notification
        if: "!contains(github.event_name, 'schedule')"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
#        with:
#          args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been deployed.'

